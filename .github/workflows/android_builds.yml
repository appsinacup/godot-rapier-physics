name: ðŸ¤– Android Builds
on:
  workflow_call:

jobs:
  android:
    runs-on: "ubuntu-22.04"
    name: ${{ matrix.dimensions.short }} ${{ matrix.precision }} ${{ matrix.features.name }} ${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        arch: ["x86_64-linux-android", "armv7-linux-androideabi", "aarch64-linux-android", "i686-linux-android"]
        precision: [single] #, double]
        dimensions: [{"feature": "dim2", "short": "2d"}, {"feature": "dim3", "short": "3d"}]
        features: [{"feature":"simd-stable,serde-serialize,experimental-threads", "name": "simd-parallel"}, {"feature":"enhanced-determinism,serde-serialize,experimental-threads", "name": "enhanced-determinism"}]

    steps:
      - uses: actions/checkout@v4
      - uses: blazium-engine/setup-blazium@master
        name: ðŸ¤– Setup Blazium
        with:
          version: 0.1.184-nightly
      - name: ðŸ”¬ Verify Setup
        run: |
          Blazium --version
          echo "GODOT4_BIN=$BLAZIUM_EDITOR" >> $GITHUB_ENV
      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r23c
      - name: Print paths
        shell: sh
        run: |
          echo $ANDROID_SDK_ROOT
          echo $ANDROID_NDK_HOME
          echo ${{steps.setup-ndk.outputs.ndk-path }}
          ls ${{steps.setup-ndk.outputs.ndk-path }}
      - name: Set android compiler
        shell: sh
        run: |
          echo "CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=${{steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android23-clang" >> $GITHUB_ENV
          echo "CARGO_TARGET_X86_64_LINUX_ANDROID_LINKER=${{steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android23-clang" >> $GITHUB_ENV
          echo "CARGO_TARGET_ARMV7_LINUX_ANDROIDEABI_LINKER=${{steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi23-clang" >> $GITHUB_ENV
          echo "CARGO_TARGET_I686_LINUX_ANDROID_LINKER=${{steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android23-clang" >> $GITHUB_ENV
          echo "CLANG_PATH=${{steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/clang" >> $GITHUB_ENV
          echo "LIBCLANG_PATH=${{steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/lib64/libclang.so.12git" >> $GITHUB_ENV
      - name: Build
        uses: ./.github/actions/build
        with:
          arch: ${{ matrix.arch }}
          features: ${{ matrix.features.feature }},${{ matrix.precision }}-${{ matrix.dimensions.feature }}
      - name: Copy to bin
        shell: sh
        run: |
          mv target/release/libgodot_rapier.so bin${{ matrix.dimensions.short }}/addons/godot-rapier${{ matrix.dimensions.short }}/bin/libgodot_rapier.android.${{ matrix.arch }}.so
          mv target/release/libgodot_rapier.a bin${{ matrix.dimensions.short }}/addons/godot-rapier${{ matrix.dimensions.short }}/bin/libgodot_rapier.android.${{ matrix.arch }}.a
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: godot-rapier-${{ matrix.dimensions.short }}-${{ matrix.precision }}-${{ matrix.features.name }}-${{ matrix.arch }}
          path: |
            bin${{ matrix.dimensions.short }}/**/*.so
          if-no-files-found: error
      - name: Upload Static
        uses: actions/upload-artifact@v4
        with:
          name: static-rapier-${{ matrix.dimensions.short }}-${{ matrix.precision }}-${{ matrix.features.name }}-${{ matrix.arch }}
          path: |
            bin${{ matrix.dimensions.short }}/**/*.a
          if-no-files-found: error
